{"version":3,"sources":["chichi.js"],"names":["TRANSITION_END","emulateTransitionEnd","getSelectorFromElement","getElementFromSelector","getTransitionDurationFromElement","isElement","reflow","Data","EventHandler","Manipulator","SelectorEngine","ACCORDION_NAME","ACCORDION_VERSION","ACCORDION_DATA_KEY","ACCORDION_EVENT_KEY","ACCORDION_DATA_API_KEY","AccordionDefaults","toggle","parent","ACCORDION_EVENT_SHOW","ACCORDION_EVENT_SHOWN","ACCORDION_EVENT_HIDE","ACCORDION_EVENT_HIDDEN","ACCORDION_EVENT_CLICK_DATA_API","ACCORDION_CLASS_NAME_SHOW","ACCORDION_CLASS_NAME_COLLAPSE","ACCORDION_CLASS_NAME_COLLAPSING","ACCORDION_CLASS_NAME_COLLAPSED","ACCORDION_WIDTH","ACCORDION_HEIGHT","ACCORDION_SELECTOR_ACTIVES","ACCORDION_SELECTOR_DATA_TOGGLE","Accordion","[object Object]","element","config","this","_isTransitioning","_element","_config","_getConfig","_triggerArray","find","id","toggleList","i","len","length","elem","selector","filterElement","filter","foundElem","_selector","push","_parent","_getParent","_addAriaAndAccordiondClass","setData","VERSION","Default","classList","contains","hide","show","actives","activesData","getAttribute","container","findOne","tempActiveData","getData","trigger","defaultPrevented","forEach","elemActive","collapseInterface","dimension","_getDimension","remove","add","style","setAttribute","setTransitioning","scrollSize","toUpperCase","slice","transitionDuration","one","getBoundingClientRect","triggerArrayLength","isTransitioning","removeData","Boolean","jquery","selected","triggerArray","isOpen","data","getDataAttributes","test","TypeError","on","document","event","target","tagName","preventDefault","triggerData","ALERT_NAME","ALERT_VERSION","ALERT_DATA_KEY","ALERT_EVENT_KEY","ALERT_DATA_API_KEY","ALERT_SELECTOR_DISMISS","ALERT_EVENT_CLOSE","ALERT_EVENT_CLOSED","ALERT_EVENT_CLICK_DATA_API","CLASSNAME_ALERT","ALERT_CLASSNAME_FADE","ALERT_CLASSNAME_SHOW","Alert","rootElement","_getRootElement","customEvent","_triggerCloseEvent","_removeElement","closest","ALERT_CLASSNAME_ALERT","_destroyElement","parentNode","removeChild","each","alertInstance","close","handleDismiss","BUTTON_NAME","BUTTON_VERSION","BUTTON_DATA_KEY","BUTTON_EVENT_KEY","BUTTON_DATA_API_KEY","BUTTON_CLASS_NAME_ACTIVE","BUTTON_SELECTOR_DATA_TOGGLE","BUTTON_EVENT_CLICK_DATA_API","Button","button","isVisible","noop","Popper","DROPDOWN_NAME","DROPDOWN_VERSION","DROPDOWN_DATA_KEY","DROPDOWN_EVENT_KEY","DROPDOWN_DATA_API_KEY","DROPDOWN_ESCAPE_KEY","DROPDOWN_SPACE_KEY","DROPDOWN_TAB_KEY","DROPDOWN_ARROW_UP_KEY","DROPDOWN_ARROW_DOWN_KEY","DROPDOWN_RIGHT_MOUSE_BUTTON","DROPDOWN_REGEXP_KEYDOWN","RegExp","DROPDOWN_EVENT_HIDE","DROPDOWN_EVENT_HIDDEN","DROPDOWN_EVENT_SHOW","DROPDOWN_EVENT_SHOWN","DROPDOWN_EVENT_CLICK","DROPDOWN_EVENT_CLICK_DATA_API","DATA_API_KEY","DROPDOWN_EVENT_KEYDOWN_DATA_API","DROPDOWN_EVENT_KEYUP_DATA_API","DROPDOWN_CLASS_NAME_DISABLED","DROPDOWN_CLASS_NAME_ACTIVE","DROPDOWN_CLASS_NAME_DROPUP","DROPDOWN_CLASS_NAME_DROPRIGHT","DROPDOWN_CLASS_NAME_DROPLEFT","DROPDOWN_CLASS_NAME_MENURIGHT","DROPDOWN_CLASS_NAME_NAVBAR","DROPDOWN_CLASS_NAME_POSITION_STATIC","DROPDOWN_SELECTOR_DATA_TOGGLE","DROPDOWN_SELECTOR_FORM_CHILD","DROPDOWN_SELECTOR_MENU","DROPDOWN_SELECTOR_NAVBAR_NAV","DROPDOWN_SELECTOR_VISIBLE_ITEMS","DROPDOWN_PLACEMENT_TOP","DROPDOWN_PLACEMENT_TOPEND","DROPDOWN_PLACEMENT_BOTTOM","DROPDOWN_PLACEMENT_BOTTOMEND","DROPDOWN_PLACEMENT_RIGHT","DROPDOWN_PLACEMENT_LEFT","DropdownDefaults","offset","flip","boundary","reference","display","popperConfig","Dropdown","_popper","_menu","_getMenuElement","_inNavbar","_detectNavbar","_addEventListeners","disabled","isActive","clearMenus","getParentFromElement","relatedTarget","DROPDOWN_DROPDOWN_EVENT_SHOW","referenceElement","_getPopperConfig","documentElement","concat","body","children","focus","toggleClass","destroy","off","scheduleUpdate","stopPropagation","constructor","next","parentDropdown","placement","fn","offsets","_getPlacement","modifiers","_getOffset","enabled","preventOverflow","boundariesElement","applyStyle","type","key","toggles","context","clickEvent","dropdownMenu","matches","SDROPDOWN_ELECTOR_DATA_TOGGLE","prev","items","index","indexOf","dataApiKeydownHandler","dropdownInterface","e","triggerTransitionEnd","SLIDER_NAME","SLIDER_VERSION","SLIDER_DATA_KEY","SLIDER_EVENT_KEY","SLIDER_DATA_API_KEY","SLIDER_ARROW_LEFT_KEY","SLIDER_ARROW_RIGHT_KEY","SLIDER_TOUCHEVENT_COMPAT_WAIT","SLIDER_SWIPE_THRESHOLD","SliderDefaults","interval","keyboard","slide","pause","wrap","touch","SLIDER_DIRECTION_NEXT","SLIDER_DIRECTION_PREV","SLIDER_DIRECTION_LEFT","SLIDER_DIRECTION_RIGHT","SLIDER_EVENT_SLIDE","SLIDER_EVENT_SLID","SLIDER_EVENT_KEYDOWN","SLIDER_EVENT_MOUSEENTER","SLIDER_EVENT_MOUSELEAVE","SLIDER_EVENT_TOUCHSTART","SLIDER_EVENT_TOUCHMOVE","SLIDER_EVENT_TOUCHEND","SLIDER_EVENT_POINTERDOWN","SLIDER_EVENT_POINTERUP","SLIDER_EVENT_DRAG_START","SLIDER_EVENT_LOAD_DATA_API","SLIDER_EVENT_CLICK_DATA_API","SLIDER_CLASS_NAME_SLIDER","SLIDER_CLASS_NAME_ACTIVE","SLIDER_CLASS_NAME_SLIDE","SLIDER_CLASS_NAME_RIGHT","SLIDER_CLASS_NAME_LEFT","SLIDER_CLASS_NAME_NEXT","SLIDER_CLASS_NAME_PREV","SLIDER_CLASS_NAME_POINTER_EVENT","SLIDER_SELECTOR_ACTIVE","SLIDER_SELECTOR_ACTIVE_ITEM","SLIDER_SELECTOR_ITEM","SLIDER_SELECTOR_ITEM_IMG","SLIDER_SELECTOR_NEXT_PREV","SLIDER_SELECTOR_INDICATORS","SLIDER_SELECTOR_DATA_SLIDE","SLIDER_SELECTOR_DATA_RIDE","PointerType","TOUCH","PEN","Slider","_items","_interval","_activeElement","_isPaused","_isSliding","touchTimeout","touchStartX","touchDeltaX","_indicatorsElement","_touchSupported","navigator","maxTouchPoints","_pointerEvent","window","PointerEvent","_slide","hidden","cycle","clearInterval","setInterval","visibilityState","nextWhenVisible","bind","activeIndex","_getItemIndex","to","direction","typeCheckConfig","NAME","DefaultType","absDeltax","Math","abs","SWIPE_THRESHOLD","_keydown","_addTouchEventListeners","start","pointerType","clientX","touches","move","end","_handleSwipe","clearTimeout","setTimeout","TOUCHEVENT_COMPAT_WAIT","itemImg","ARROW_LEFT_KEY","ARROW_RIGHT_KEY","activeElement","isNextDirection","isPrevDirection","lastItemIndex","itemIndex","eventDirectionName","targetIndex","fromIndex","SLIDER_SLIDER_EVENT_SLIDE","from","indicators","nextIndicator","activeElementIndex","nextElement","_getItemByDirection","nextElementIndex","isCycling","directionalClassName","orderClassName","_triggerSlideEvent","_setActiveIndicatorElement","nextElementInterval","parseInt","defaultInterval","action","ride","slideIndex","sliderInterface","dataApiClickHandler","sliders"],"mappings":"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","file":"chichi.min.js","sourcesContent":["/**\n * --------------------------------------------------------------------------\n * ChiChi (v0.1.0-alpha2): accordion.ts\n * Licensed under MIT\n * --------------------------------------------------------------------------\n */\nimport { TRANSITION_END, emulateTransitionEnd, getSelectorFromElement, getElementFromSelector, getTransitionDurationFromElement, isElement, reflow } from './util/index';\nimport Data from './dom/data';\nimport EventHandler from './dom/event-handler';\nimport Manipulator from './dom/manipulator';\nimport SelectorEngine from './dom/selector-engine';\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst ACCORDION_NAME = 'accordion';\nconst ACCORDION_VERSION = '0.1.0-alpha1';\nconst ACCORDION_DATA_KEY = 'chichi.accordion';\nconst ACCORDION_EVENT_KEY = `.${ACCORDION_DATA_KEY}`;\nconst ACCORDION_DATA_API_KEY = '.data-api';\nconst AccordionDefaults = {\n  toggle: true,\n  parent: ''\n};\nconst ACCORDION_EVENT_SHOW = `show${ACCORDION_EVENT_KEY}`;\nconst ACCORDION_EVENT_SHOWN = `shown${ACCORDION_EVENT_KEY}`;\nconst ACCORDION_EVENT_HIDE = `hide${ACCORDION_EVENT_KEY}`;\nconst ACCORDION_EVENT_HIDDEN = `hidden${ACCORDION_EVENT_KEY}`;\nconst ACCORDION_EVENT_CLICK_DATA_API = `click${ACCORDION_EVENT_KEY}${ACCORDION_DATA_API_KEY}`;\nconst ACCORDION_CLASS_NAME_SHOW = 'is-active';\nconst ACCORDION_CLASS_NAME_COLLAPSE = 'accordion';\nconst ACCORDION_CLASS_NAME_COLLAPSING = 'is-collapsing';\nconst ACCORDION_CLASS_NAME_COLLAPSED = 'is-collapsed';\nconst ACCORDION_WIDTH = 'width';\nconst ACCORDION_HEIGHT = 'height';\nconst ACCORDION_SELECTOR_ACTIVES = '.is-active, .is-collapsing';\nconst ACCORDION_SELECTOR_DATA_TOGGLE = '[data-toggle=\"accordion\"]';\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\n\nclass Accordion {\n  constructor(element, config) {\n    this._isTransitioning = false;\n    this._element = element;\n    this._config = this._getConfig(config);\n    this._triggerArray = SelectorEngine.find(`${ACCORDION_SELECTOR_DATA_TOGGLE}[href=\"#${element.id}\"],` + `${ACCORDION_SELECTOR_DATA_TOGGLE}[data-target=\"#${element.id}\"]`);\n    const toggleList = SelectorEngine.find(ACCORDION_SELECTOR_DATA_TOGGLE);\n\n    for (let i = 0, len = toggleList.length; i < len; i++) {\n      const elem = toggleList[i];\n      const selector = getSelectorFromElement(elem);\n      const filterElement = SelectorEngine.find(selector).filter(foundElem => foundElem === element);\n\n      if (selector !== null && filterElement.length) {\n        this._selector = selector;\n\n        this._triggerArray.push(elem);\n      }\n    }\n\n    this._parent = this._config.parent ? this._getParent() : null;\n\n    if (!this._config.parent) {\n      this._addAriaAndAccordiondClass(this._element, this._triggerArray);\n    }\n\n    if (this._config.toggle) {\n      this.toggle();\n    }\n\n    Data.setData(element, ACCORDION_DATA_KEY, this);\n  } // Getters\n\n\n  static get VERSION() {\n    return VERSION;\n  }\n\n  static get Default() {\n    return AccordionDefaults;\n  } // Public\n\n\n  toggle() {\n    if (this._element.classList.contains(ACCORDION_CLASS_NAME_SHOW)) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n\n  show() {\n    if (this._isTransitioning || this._element.classList.contains(ACCORDION_CLASS_NAME_SHOW)) {\n      return;\n    }\n\n    let actives;\n    let activesData;\n\n    if (this._parent) {\n      actives = SelectorEngine.find(ACCORDION_SELECTOR_ACTIVES, this._parent).filter(elem => {\n        if (typeof this._config.parent === 'string') {\n          return elem.getAttribute('data-parent') === this._config.parent;\n        }\n\n        return elem.classList.contains(ACCORDION_CLASS_NAME_COLLAPSE);\n      });\n\n      if (actives.length === 0) {\n        actives = null;\n      }\n    }\n\n    const container = SelectorEngine.findOne(this._selector);\n\n    if (actives) {\n      const tempActiveData = actives.filter(elem => container !== elem);\n      activesData = tempActiveData[0] ? Data.getData(tempActiveData[0], ACCORDION_DATA_KEY) : null;\n\n      if (activesData && activesData._isTransitioning) {\n        return;\n      }\n    }\n\n    const startEvent = EventHandler.trigger(this._element, ACCORDION_EVENT_SHOW);\n\n    if (startEvent.defaultPrevented) {\n      return;\n    }\n\n    if (actives) {\n      actives.forEach(elemActive => {\n        if (container !== elemActive) {\n          Accordion.collapseInterface(elemActive, 'hide');\n        }\n\n        if (!activesData) {\n          Data.setData(elemActive, ACCORDION_DATA_KEY, null);\n        }\n      });\n    }\n\n    const dimension = this._getDimension();\n\n    this._element.classList.remove(ACCORDION_CLASS_NAME_COLLAPSE);\n\n    this._element.classList.add(ACCORDION_CLASS_NAME_COLLAPSING);\n\n    this._element.style[dimension] = 0;\n\n    if (this._triggerArray.length) {\n      this._triggerArray.forEach(element => {\n        element.classList.remove(ACCORDION_CLASS_NAME_COLLAPSED);\n        element.setAttribute('aria-expanded', true);\n      });\n    }\n\n    this.setTransitioning(true);\n\n    const complete = () => {\n      this._element.classList.remove(ACCORDION_CLASS_NAME_COLLAPSING);\n\n      this._element.classList.add(ACCORDION_CLASS_NAME_COLLAPSE, ACCORDION_CLASS_NAME_SHOW);\n\n      this._element.style[dimension] = '';\n      this.setTransitioning(false);\n      EventHandler.trigger(this._element, ACCORDION_EVENT_SHOWN);\n    };\n\n    const capitalizedDimension = dimension[0].toUpperCase() + dimension.slice(1);\n    const scrollSize = `scroll${capitalizedDimension}`;\n    const transitionDuration = getTransitionDurationFromElement(this._element);\n    EventHandler.one(this._element, TRANSITION_END, complete);\n    emulateTransitionEnd(this._element, transitionDuration);\n    this._element.style[dimension] = `${this._element[scrollSize]}px`;\n  }\n\n  hide() {\n    if (this._isTransitioning || !this._element.classList.contains(ACCORDION_CLASS_NAME_SHOW)) {\n      return;\n    }\n\n    const startEvent = EventHandler.trigger(this._element, ACCORDION_EVENT_HIDE);\n\n    if (startEvent.defaultPrevented) {\n      return;\n    }\n\n    const dimension = this._getDimension();\n\n    this._element.style[dimension] = `${this._element.getBoundingClientRect()[dimension]}px`;\n    reflow(this._element);\n\n    this._element.classList.add(ACCORDION_CLASS_NAME_COLLAPSING);\n\n    this._element.classList.remove(ACCORDION_CLASS_NAME_COLLAPSE, ACCORDION_CLASS_NAME_SHOW);\n\n    const triggerArrayLength = this._triggerArray.length;\n\n    if (triggerArrayLength > 0) {\n      for (let i = 0; i < triggerArrayLength; i++) {\n        const trigger = this._triggerArray[i];\n        const elem = getElementFromSelector(trigger);\n\n        if (elem && !elem.classList.contains(ACCORDION_CLASS_NAME_SHOW)) {\n          trigger.classList.add(ACCORDION_CLASS_NAME_COLLAPSED);\n          trigger.setAttribute('aria-expanded', false);\n        }\n      }\n    }\n\n    this.setTransitioning(true);\n\n    const complete = () => {\n      this.setTransitioning(false);\n\n      this._element.classList.remove(ACCORDION_CLASS_NAME_COLLAPSING);\n\n      this._element.classList.add(ACCORDION_CLASS_NAME_COLLAPSE);\n\n      EventHandler.trigger(this._element, ACCORDION_EVENT_HIDDEN);\n    };\n\n    this._element.style[dimension] = '';\n    const transitionDuration = getTransitionDurationFromElement(this._element);\n    EventHandler.one(this._element, TRANSITION_END, complete);\n    emulateTransitionEnd(this._element, transitionDuration);\n  }\n\n  setTransitioning(isTransitioning) {\n    this._isTransitioning = isTransitioning;\n  }\n\n  dispose() {\n    Data.removeData(this._element, ACCORDION_DATA_KEY);\n    this._config = null;\n    this._parent = null;\n    this._element = null;\n    this._triggerArray = null;\n    this._isTransitioning = null;\n  } // Private\n\n\n  _getConfig(config) {\n    config = { ...AccordionDefaults,\n      ...config\n    };\n    config.toggle = Boolean(config.toggle); // Coerce string values\n\n    return config;\n  }\n\n  _getDimension() {\n    const hasWidth = this._element.classList.contains(ACCORDION_WIDTH);\n\n    return hasWidth ? ACCORDION_WIDTH : ACCORDION_HEIGHT;\n  }\n\n  _getParent() {\n    let {\n      parent\n    } = this._config;\n\n    if (isElement(parent)) {\n      // it's a jQuery object\n      if (typeof parent.jquery !== 'undefined' || typeof parent[0] !== 'undefined') {\n        parent = parent[0];\n      }\n    } else {\n      parent = SelectorEngine.findOne(parent);\n    }\n\n    const selector = `${ACCORDION_SELECTOR_DATA_TOGGLE}[data-parent=\"${parent}\"]`;\n    SelectorEngine.find(selector, parent).forEach(element => {\n      const selected = getElementFromSelector(element);\n\n      this._addAriaAndAccordiondClass(selected, [element]);\n    });\n    return parent;\n  }\n\n  _addAriaAndAccordiondClass(element, triggerArray) {\n    if (element) {\n      const isOpen = element.classList.contains(ACCORDION_CLASS_NAME_SHOW);\n\n      if (triggerArray.length) {\n        triggerArray.forEach(elem => {\n          if (isOpen) {\n            elem.classList.remove(ACCORDION_CLASS_NAME_COLLAPSED);\n          } else {\n            elem.classList.add(ACCORDION_CLASS_NAME_COLLAPSED);\n          }\n\n          elem.setAttribute('aria-expanded', isOpen);\n        });\n      }\n    }\n  } // Static\n\n\n  static collapseInterface(element, config) {\n    let data = Data.getData(element, ACCORDION_DATA_KEY);\n    const _config = { ...AccordionDefaults,\n      ...Manipulator.getDataAttributes(element),\n      ...(typeof config === 'object' && config ? config : {})\n    };\n\n    if (!data && _config.toggle && typeof config === 'string' && /show|hide/.test(config)) {\n      _config.toggle = false;\n    }\n\n    if (!data) {\n      data = new Accordion(element, _config);\n    }\n\n    if (typeof config === 'string') {\n      if (typeof data[config] === 'undefined') {\n        throw new TypeError(`No method named \"${config}\"`);\n      }\n\n      data[config]();\n    }\n  }\n\n  static getInstance(element) {\n    return Data.getData(element, ACCORDION_DATA_KEY);\n  }\n\n}\n/**\n * ------------------------------------------------------------------------\n * Data api implementation\n * ------------------------------------------------------------------------\n */\n\n\nEventHandler.on(document, ACCORDION_EVENT_CLICK_DATA_API, ACCORDION_SELECTOR_DATA_TOGGLE, function (event) {\n  // preventDefault only for <a> elements (which change the URL) not inside the collapsible element\n  if (event.target.tagName === 'A') {\n    event.preventDefault();\n  }\n\n  const triggerData = Manipulator.getDataAttributes(this);\n  const selector = getSelectorFromElement(this);\n  const selectorElements = SelectorEngine.find(selector);\n  selectorElements.forEach(element => {\n    const data = Data.getData(element, ACCORDION_DATA_KEY);\n    let config;\n\n    if (data) {\n      // update parent attribute\n      if (data._parent === null && typeof triggerData.parent === 'string') {\n        data._config.parent = triggerData.parent;\n        data._parent = data._getParent();\n      }\n\n      config = 'toggle';\n    } else {\n      config = triggerData;\n    }\n\n    Accordion.collapseInterface(element, config);\n  });\n});\n/**\n * ------------------------------------------------------------------------\n * Exports\n * ------------------------------------------------------------------------\n */\n\nexport default Accordion;\n/**\n * --------------------------------------------------------------------------\n * ChiChi (v0.1.0-alpha1): alert.ts\n * Licensed under MIT\n * --------------------------------------------------------------------------\n */\nimport { TRANSITION_END, emulateTransitionEnd, getElementFromSelector, getTransitionDurationFromElement } from './util/index';\nimport Data from './dom/data';\nimport EventHandler from './dom/event-handler';\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst ALERT_NAME = 'alert';\nconst ALERT_VERSION = '0.1.0-alpha1';\nconst ALERT_DATA_KEY = 'chichi.alert';\nconst ALERT_EVENT_KEY = `.${ALERT_DATA_KEY}`;\nconst ALERT_DATA_API_KEY = '.data-api';\nconst ALERT_SELECTOR_DISMISS = '[data-dismiss=\"alert\"]';\nconst ALERT_EVENT_CLOSE = `close${ALERT_EVENT_KEY}`;\nconst ALERT_EVENT_CLOSED = `closed${ALERT_EVENT_KEY}`;\nconst ALERT_EVENT_CLICK_DATA_API = `click${ALERT_EVENT_KEY}${ALERT_DATA_API_KEY}`;\nconst CLASSNAME_ALERT = 'alert';\nconst ALERT_CLASSNAME_FADE = 'fade';\nconst ALERT_CLASSNAME_SHOW = 'show';\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\n\nclass Alert {\n  constructor(element) {\n    this._element = element;\n\n    if (this._element) {\n      Data.setData(element, ALERT_DATA_KEY, this);\n    }\n  } // Getters\n\n\n  static get VERSION() {\n    return ALERT_VERSION;\n  } // Public\n\n\n  close(element) {\n    let rootElement = this._element;\n\n    if (element) {\n      rootElement = this._getRootElement(element);\n    }\n\n    const customEvent = this._triggerCloseEvent(rootElement);\n\n    if (customEvent === null || customEvent.defaultPrevented) {\n      return;\n    }\n\n    this._removeElement(rootElement);\n  }\n\n  dispose() {\n    Data.removeData(this._element, ALERT_DATA_KEY);\n    this._element = null;\n  } // Private\n\n\n  _getRootElement(element) {\n    return getElementFromSelector(element) || element.closest(`.${ALERT_CLASSNAME_ALERT}`);\n  }\n\n  _triggerCloseEvent(element) {\n    return EventHandler.trigger(element, ALERT_EVENT_CLOSE);\n  }\n\n  _removeElement(element) {\n    element.classList.remove(ALERT_CLASSNAME_SHOW);\n\n    if (!element.classList.contains(ALERT_CLASSNAME_FADE)) {\n      this._destroyElement(element);\n\n      return;\n    }\n\n    const transitionDuration = getTransitionDurationFromElement(element);\n    EventHandler.one(element, TRANSITION_END, () => this._destroyElement(element));\n    emulateTransitionEnd(element, transitionDuration);\n  }\n\n  _destroyElement(element) {\n    if (element.parentNode) {\n      element.parentNode.removeChild(element);\n    }\n\n    EventHandler.trigger(element, ALERT_EVENT_CLOSED);\n  } // Static\n\n\n  static jQueryInterface(config) {\n    return this.each(function () {\n      let data = Data.getData(this, ALERT_DATA_KEY);\n\n      if (!data) {\n        data = new Alert(this);\n      }\n\n      if (config === 'close') {\n        data[config](this);\n      }\n    });\n  }\n\n  static handleDismiss(alertInstance) {\n    return function (event) {\n      if (event) {\n        event.preventDefault();\n      }\n\n      alertInstance.close(this);\n    };\n  }\n\n  static getInstance(element) {\n    return Data.getData(element, ALERT_DATA_KEY);\n  }\n\n}\n/**\n * ------------------------------------------------------------------------\n * Data Api implementation\n * ------------------------------------------------------------------------\n */\n\n\nEventHandler.on(document, ALERT_EVENT_CLICK_DATA_API, ALERT_SELECTOR_DISMISS, Alert.handleDismiss(new Alert()));\n/**\n * ------------------------------------------------------------------------\n * Exports\n * ------------------------------------------------------------------------\n */\n\nexport default Alert;\n/**\n * --------------------------------------------------------------------------\n * ChiChi (v0.1.0-alpha2): button.ts\n * Licensed under MIT\n * --------------------------------------------------------------------------\n */\nimport Data from './dom/data';\nimport EventHandler from './dom/event-handler';\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst BUTTON_NAME = 'button';\nconst BUTTON_VERSION = '0.1.0-alpha1';\nconst BUTTON_DATA_KEY = 'chichi.button';\nconst BUTTON_EVENT_KEY = `.${BUTTON_DATA_KEY}`;\nconst BUTTON_DATA_API_KEY = '.data-api';\nconst BUTTON_CLASS_NAME_ACTIVE = 'is-active';\nconst BUTTON_SELECTOR_DATA_TOGGLE = '[data-toggle=\"button\"]';\nconst BUTTON_EVENT_CLICK_DATA_API = `click${BUTTON_EVENT_KEY}${BUTTON_DATA_API_KEY}`;\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\n\nclass Button {\n  constructor(element) {\n    this._element = element;\n    Data.setData(element, BUTTON_DATA_KEY, this);\n  } // Getters\n\n\n  static get VERSION() {\n    return BUTTON_VERSION;\n  } // Public\n\n\n  toggle() {\n    // Toggle class and sync the `aria-pressed` attribute with the return value of the `.toggle()` method\n    this._element.setAttribute('aria-pressed', this._element.classList.toggle(BUTTON_CLASS_NAME_ACTIVE));\n  }\n\n  dispose() {\n    Data.removeData(this._element, BUTTON_DATA_KEY);\n    this._element = null;\n  } // Static\n\n\n  static getInstance(element) {\n    return Data.getData(element, BUTTON_DATA_KEY);\n  }\n\n}\n/**\n * ------------------------------------------------------------------------\n * Data Api implementation\n * ------------------------------------------------------------------------\n */\n\n\nEventHandler.on(document, BUTTON_EVENT_CLICK_DATA_API, BUTTON_SELECTOR_DATA_TOGGLE, event => {\n  event.preventDefault();\n  const button = event.target.closest(BUTTON_SELECTOR_DATA_TOGGLE);\n  let data = Data.getData(button, BUTTON_DATA_KEY);\n\n  if (!data) {\n    data = new Button(button);\n  }\n\n  data.toggle();\n});\n/**\n * ------------------------------------------------------------------------\n * Exports\n * ------------------------------------------------------------------------\n */\n\nexport default Button;\n/**\n * --------------------------------------------------------------------------\n * ChiChi (v0.1.0-alpha2): dropdown.ts\n * Licensed under MIT\n * --------------------------------------------------------------------------\n */\nimport { getElementFromSelector, isElement, isVisible, noop } from './util/index';\nimport Data from './dom/data';\nimport EventHandler from './dom/event-handler';\nimport Manipulator from './dom/manipulator';\nimport Popper from 'popper.js';\nimport SelectorEngine from './dom/selector-engine';\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst DROPDOWN_NAME = 'dropdown';\nconst DROPDOWN_VERSION = '0.1.0-alpha1';\nconst DROPDOWN_DATA_KEY = 'chichi.dropdown';\nconst DROPDOWN_EVENT_KEY = `.${DROPDOWN_DATA_KEY}`;\nconst DROPDOWN_DATA_API_KEY = '.data-api';\nconst DROPDOWN_ESCAPE_KEY = 'Escape';\nconst DROPDOWN_SPACE_KEY = 'Space';\nconst DROPDOWN_TAB_KEY = 'Tab';\nconst DROPDOWN_ARROW_UP_KEY = 'ArrowUp';\nconst DROPDOWN_ARROW_DOWN_KEY = 'ArrowDown';\nconst DROPDOWN_RIGHT_MOUSE_BUTTON = 2; // MouseEvent.button value for the secondary button, usually the right button\n\nconst DROPDOWN_REGEXP_KEYDOWN = new RegExp(`${DROPDOWN_ARROW_UP_KEY}|${DROPDOWN_ARROW_DOWN_KEY}|${DROPDOWN_ESCAPE_KEY}`);\nconst DROPDOWN_EVENT_HIDE = `hide${DROPDOWN_EVENT_KEY}`;\nconst DROPDOWN_EVENT_HIDDEN = `hidden${DROPDOWN_EVENT_KEY}`;\nconst DROPDOWN_EVENT_SHOW = `show${DROPDOWN_EVENT_KEY}`;\nconst DROPDOWN_EVENT_SHOWN = `shown${DROPDOWN_EVENT_KEY}`;\nconst DROPDOWN_EVENT_CLICK = `click${DROPDOWN_EVENT_KEY}`;\nconst DROPDOWN_EVENT_CLICK_DATA_API = `click${DROPDOWN_EVENT_KEY}${DATA_API_KEY}`;\nconst DROPDOWN_EVENT_KEYDOWN_DATA_API = `keydown${DROPDOWN_EVENT_KEY}${DATA_API_KEY}`;\nconst DROPDOWN_EVENT_KEYUP_DATA_API = `keyup${DROPDOWN_EVENT_KEY}${DATA_API_KEY}`;\nconst DROPDOWN_CLASS_NAME_DISABLED = 'disabled';\nconst DROPDOWN_CLASS_NAME_ACTIVE = 'is-active';\nconst DROPDOWN_CLASS_NAME_DROPUP = 'is-up';\nconst DROPDOWN_CLASS_NAME_DROPRIGHT = 'is-right';\nconst DROPDOWN_CLASS_NAME_DROPLEFT = 'is-left';\nconst DROPDOWN_CLASS_NAME_MENURIGHT = 'dropdown-menu-right';\nconst DROPDOWN_CLASS_NAME_NAVBAR = 'navbar';\nconst DROPDOWN_CLASS_NAME_POSITION_STATIC = 'is-static';\nconst DROPDOWN_SELECTOR_DATA_TOGGLE = '[data-toggle=\"dropdown\"]';\nconst DROPDOWN_SELECTOR_FORM_CHILD = '.dropdown form';\nconst DROPDOWN_SELECTOR_MENU = '.dropdown-menu';\nconst DROPDOWN_SELECTOR_NAVBAR_NAV = '.navbar-item';\nconst DROPDOWN_SELECTOR_VISIBLE_ITEMS = '.dropdown-menu .dropdown-item:not(.disabled):not(:disabled)';\nconst DROPDOWN_PLACEMENT_TOP = 'top-start';\nconst DROPDOWN_PLACEMENT_TOPEND = 'top-end';\nconst DROPDOWN_PLACEMENT_BOTTOM = 'bottom-start';\nconst DROPDOWN_PLACEMENT_BOTTOMEND = 'bottom-end';\nconst DROPDOWN_PLACEMENT_RIGHT = 'right-start';\nconst DROPDOWN_PLACEMENT_LEFT = 'left-start';\nconst DropdownDefaults = {\n  offset: 0,\n  flip: true,\n  boundary: 'scrollParent',\n  reference: 'toggle',\n  display: 'dynamic',\n  popperConfig: null\n};\n/**\n* ------------------------------------------------------------------------\n* Class Definition\n* ------------------------------------------------------------------------\n*/\n\nclass Dropdown {\n  constructor(element, config) {\n    this._element = element;\n    this._popper = null;\n    this._config = this._getConfig(config);\n    this._menu = this._getMenuElement();\n    this._inNavbar = this._detectNavbar();\n\n    this._addEventListeners();\n\n    Data.setData(element, DROPDOWN_DATA_KEY, this);\n  } // Getters\n\n\n  static get VERSION() {\n    return DROPDOWN_VERSION;\n  }\n\n  static get Default() {\n    return DropdownDefaults;\n  } // Public\n\n\n  toggle() {\n    if (this._element.disabled || this._element.classList.contains(DROPDOWN_CLASS_NAME_DISABLED)) {\n      return;\n    }\n\n    const isActive = this._element.classList.contains(DROPDOWN_CLASS_NAME_ACTIVE);\n\n    Dropdown.clearMenus();\n\n    if (isActive) {\n      return;\n    }\n\n    this.show();\n  }\n\n  show() {\n    if (this._element.disabled || this._element.classList.contains(DROPDOWN_CLASS_NAME_DISABLED) || this._menu.classList.contains(DROPDOWN_CLASS_NAME_ACTIVE)) {\n      return;\n    }\n\n    const parent = Dropdown.getParentFromElement(this._element);\n    const relatedTarget = {\n      relatedTarget: this._element\n    };\n    const showEvent = EventHandler.trigger(this._element, DROPDOWN_DROPDOWN_EVENT_SHOW, relatedTarget);\n\n    if (showEvent.defaultPrevented) {\n      return;\n    } // Disable totally Popper.js for Dropdown in Navbar\n\n\n    if (!this._inNavbar) {\n      if (typeof Popper === 'undefined') {\n        throw new TypeError('Bootstrap\\'s dropdowns require Popper.js (https://popper.js.org)');\n      }\n\n      let referenceElement = this._element;\n\n      if (this._config.reference === 'parent') {\n        referenceElement = parent;\n      } else if (isElement(this._config.reference)) {\n        referenceElement = this._config.reference; // Check if it's jQuery element\n\n        if (typeof this._config.reference.jquery !== 'undefined') {\n          referenceElement = this._config.reference[0];\n        }\n      } // If boundary is not `scrollParent`, then set position to `static`\n      // to allow the menu to \"escape\" the scroll parent's boundaries\n      // https://github.com/twbs/bootstrap/issues/24251\n\n\n      if (this._config.boundary !== 'scrollParent') {\n        parent.classList.add(DROPDOWN_CLASS_NAME_POSITION_STATIC);\n      }\n\n      this._popper = new Popper(referenceElement, this._menu, this._getPopperConfig());\n    } // If this is a touch-enabled device we add extra\n    // empty mouseover listeners to the body's immediate children;\n    // only needed because of broken event delegation on iOS\n    // https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html\n\n\n    if ('ontouchstart' in document.documentElement && !parent.closest(DROPDOWN_SELECTOR_NAVBAR_NAV)) {\n      [].concat(...document.body.children).forEach(elem => EventHandler.on(elem, 'mouseover', null, noop()));\n    }\n\n    this._element.focus();\n\n    this._element.setAttribute('aria-expanded', true);\n\n    Manipulator.toggleClass(this._menu, DROPDOWN_CLASS_NAME_ACTIVE);\n    Manipulator.toggleClass(this._element, DROPDOWN_CLASS_NAME_ACTIVE);\n    EventHandler.trigger(parent, DROPDOWN_EVENT_SHOWN, relatedTarget);\n  }\n\n  hide() {\n    if (this._element.disabled || this._element.classList.contains(DROPDOWN_CLASS_NAME_DISABLED) || !this._menu.classList.contains(DROPDOWN_CLASS_NAME_ACTIVE)) {\n      return;\n    }\n\n    const parent = Dropdown.getParentFromElement(this._element);\n    const relatedTarget = {\n      relatedTarget: this._element\n    };\n    const hideEvent = EventHandler.trigger(parent, DROPDOWN_EVENT_HIDE, relatedTarget);\n\n    if (hideEvent.defaultPrevented) {\n      return;\n    }\n\n    if (this._popper) {\n      this._popper.destroy();\n    }\n\n    Manipulator.toggleClass(this._menu, DROPDOWN_CLASS_NAME_ACTIVE);\n    Manipulator.toggleClass(this._element, DROPDOWN_CLASS_NAME_ACTIVE);\n    EventHandler.trigger(parent, DROPDOWN_EVENT_HIDDEN, relatedTarget);\n  }\n\n  dispose() {\n    Data.removeData(this._element, DROPDOWN_DATA_KEY);\n    EventHandler.off(this._element, DROPDOWN_EVENT_KEY);\n    this._element = null;\n    this._menu = null;\n\n    if (this._popper) {\n      this._popper.destroy();\n\n      this._popper = null;\n    }\n  }\n\n  update() {\n    this._inNavbar = this._detectNavbar();\n\n    if (this._popper) {\n      this._popper.scheduleUpdate();\n    }\n  } // Private\n\n\n  _addEventListeners() {\n    EventHandler.on(this._element, DROPDOWN_EVENT_CLICK, event => {\n      event.preventDefault();\n      event.stopPropagation();\n      this.toggle();\n    });\n  }\n\n  _getConfig(config) {\n    config = { ...this.constructor.Default,\n      ...Manipulator.getDataAttributes(this._element),\n      ...config\n    };\n    return config;\n  }\n\n  _getMenuElement() {\n    return SelectorEngine.next(this._element, DROPDOWN_SELECTOR_MENU)[0];\n  }\n\n  _getPlacement() {\n    const parentDropdown = this._element.parentNode;\n    let placement = DROPDOWN_PLACEMENT_BOTTOM; // Handle dropup\n\n    if (parentDropdown.classList.contains(DROPDOWN_CLASS_NAME_DROPUP)) {\n      placement = DROPDOWN_PLACEMENT_TOP;\n\n      if (this._menu.classList.contains(DROPDOWN_CLASS_NAME_MENURIGHT)) {\n        placement = DROPDOWN_PLACEMENT_TOPEND;\n      }\n    } else if (parentDropdown.classList.contains(DROPDOWN_CLASS_NAME_DROPRIGHT)) {\n      placement = DROPDOWN_PLACEMENT_RIGHT;\n    } else if (parentDropdown.classList.contains(DROPDOWN_CLASS_NAME_DROPLEFT)) {\n      placement = DROPDOWN_PLACEMENT_LEFT;\n    } else if (this._menu.classList.contains(DROPDOWN_CLASS_NAME_MENURIGHT)) {\n      placement = DROPDOWN_PLACEMENT_BOTTOMEND;\n    }\n\n    return placement;\n  }\n\n  _detectNavbar() {\n    return Boolean(this._element.closest(`.${DROPDOWN_CLASS_NAME_NAVBAR}`));\n  }\n\n  _getOffset() {\n    const offset = {};\n\n    if (typeof this._config.offset === 'function') {\n      offset.fn = data => {\n        data.offsets = { ...data.offsets,\n          ...(this._config.offset(data.offsets, this._element) || {})\n        };\n        return data;\n      };\n    } else {\n      offset.offset = this._config.offset;\n    }\n\n    return offset;\n  }\n\n  _getPopperConfig() {\n    const popperConfig = {\n      placement: this._getPlacement(),\n      modifiers: {\n        offset: this._getOffset(),\n        flip: {\n          enabled: this._config.flip\n        },\n        preventOverflow: {\n          boundariesElement: this._config.boundary\n        }\n      }\n    }; // Disable Popper.js if we have a static display\n\n    if (this._config.display === 'static') {\n      popperConfig.modifiers.applyStyle = {\n        enabled: false\n      };\n    }\n\n    return { ...popperConfig,\n      ...this._config.popperConfig\n    };\n  } // Static\n\n\n  static dropdownInterface(element, config) {\n    let data = Data.getData(element, DROPDOWN_DATA_KEY);\n\n    const _config = typeof config === 'object' ? config : null;\n\n    if (!data) {\n      data = new Dropdown(element, _config);\n    }\n\n    if (typeof config === 'string') {\n      if (typeof data[config] === 'undefined') {\n        throw new TypeError(`No method named \"${config}\"`);\n      }\n\n      data[config]();\n    }\n  }\n\n  static clearMenus(event) {\n    if (event && (event.button === DROPDOWN_RIGHT_MOUSE_BUTTON || event.type === 'keyup' && event.key !== DROPDOWN_TAB_KEY)) {\n      return;\n    }\n\n    const toggles = SelectorEngine.find(DROPDOWN_SELECTOR_DATA_TOGGLE);\n\n    for (let i = 0, len = toggles.length; i < len; i++) {\n      const parent = Dropdown.getParentFromElement(toggles[i]);\n      const context = Data.getData(toggles[i], DROPDOWN_DATA_KEY);\n      const relatedTarget = {\n        relatedTarget: toggles[i]\n      };\n\n      if (event && event.type === 'click') {\n        relatedTarget.clickEvent = event;\n      }\n\n      if (!context) {\n        continue;\n      }\n\n      const dropdownMenu = context._menu;\n\n      if (!toggles[i].classList.contains(DROPDOWN_CLASS_NAME_ACTIVE)) {\n        continue;\n      }\n\n      if (event && (event.type === 'click' && /input|textarea/i.test(event.target.tagName) || event.type === 'keyup' && event.key === DROPDOWN_TAB_KEY) && dropdownMenu.contains(event.target)) {\n        continue;\n      }\n\n      const hideEvent = EventHandler.trigger(parent, DROPDOWN_EVENT_HIDE, relatedTarget);\n\n      if (hideEvent.defaultPrevented) {\n        continue;\n      } // If this is a touch-enabled device we remove the extra\n      // empty mouseover listeners we added for iOS support\n\n\n      if ('ontouchstart' in document.documentElement) {\n        [].concat(...document.body.children).forEach(elem => EventHandler.off(elem, 'mouseover', null, noop()));\n      }\n\n      toggles[i].setAttribute('aria-expanded', 'false');\n\n      if (context._popper) {\n        context._popper.destroy();\n      }\n\n      dropdownMenu.classList.remove(DROPDOWN_CLASS_NAME_ACTIVE);\n      toggles[i].classList.remove(DROPDOWN_CLASS_NAME_ACTIVE);\n      EventHandler.trigger(parent, DROPDOWN_EVENT_HIDDEN, relatedTarget);\n    }\n  }\n\n  static getParentFromElement(element) {\n    return getElementFromSelector(element) || element.parentNode;\n  }\n\n  static dataApiKeydownHandler(event) {\n    // If not input/textarea:\n    //  - And not a key in REGEXP_KEYDOWN => not a dropdown command\n    // If input/textarea:\n    //  - If space key => not a dropdown command\n    //  - If key is other than escape\n    //    - If key is not up or down => not a dropdown command\n    //    - If trigger inside the menu => not a dropdown command\n    if (/input|textarea/i.test(event.target.tagName) ? event.key === DROPDOWN_SPACE_KEY || event.key !== DROPDOWN_ESCAPE_KEY && (event.key !== DROPDOWN_ARROW_DOWN_KEY && event.key !== DROPDOWN_ARROW_UP_KEY || event.target.closest(DROPDOWN_SELECTOR_MENU)) : !DROPDOWN_REGEXP_KEYDOWN.test(event.key)) {\n      return;\n    }\n\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (this.disabled || this.classList.contains(DROPDOWN_CLASS_NAME_DISABLED)) {\n      return;\n    }\n\n    const parent = Dropdown.getParentFromElement(this);\n    const isActive = this.classList.contains(DROPDOWN_CLASS_NAME_ACTIVE);\n\n    if (event.key === DROPDOWN_ESCAPE_KEY) {\n      const button = this.matches(SDROPDOWN_ELECTOR_DATA_TOGGLE) ? this : SelectorEngine.prev(this, DROPDOWN_SELECTOR_DATA_TOGGLE)[0];\n      button.focus();\n      Dropdown.clearMenus();\n      return;\n    }\n\n    if (!isActive || event.key === DROPDOWN_SPACE_KEY) {\n      Dropdown.clearMenus();\n      return;\n    }\n\n    const items = SelectorEngine.find(DROPDOWN_SELECTOR_VISIBLE_ITEMS, parent).filter(isVisible);\n\n    if (!items.length) {\n      return;\n    }\n\n    let index = items.indexOf(event.target);\n\n    if (event.key === DROPDOWN_ARROW_UP_KEY && index > 0) {\n      // Up\n      index--;\n    }\n\n    if (event.key === DROPDOWN_ARROW_DOWN_KEY && index < items.length - 1) {\n      // Down\n      index++;\n    } // index is -1 if the first keydown is an ArrowUp\n\n\n    index = index === -1 ? 0 : index;\n    items[index].focus();\n  }\n\n  static getInstance(element) {\n    return Data.getData(element, DROPDOWN_DATA_KEY);\n  }\n\n}\n/**\n* ------------------------------------------------------------------------\n* Data Api implementation\n* ------------------------------------------------------------------------\n*/\n\n\nEventHandler.on(document, DROPDOWN_EVENT_KEYDOWN_DATA_API, DROPDOWN_SELECTOR_DATA_TOGGLE, Dropdown.dataApiKeydownHandler);\nEventHandler.on(document, DROPDOWN_EVENT_KEYDOWN_DATA_API, DROPDOWN_SELECTOR_MENU, Dropdown.dataApiKeydownHandler);\nEventHandler.on(document, DROPDOWN_EVENT_CLICK_DATA_API, Dropdown.clearMenus);\nEventHandler.on(document, DROPDOWN_EVENT_KEYUP_DATA_API, Dropdown.clearMenus);\nEventHandler.on(document, DROPDOWN_EVENT_CLICK_DATA_API, DROPDOWN_SELECTOR_DATA_TOGGLE, function (event) {\n  event.preventDefault();\n  event.stopPropagation();\n  Dropdown.dropdownInterface(this, 'toggle');\n});\nEventHandler.on(document, DROPDOWN_EVENT_CLICK_DATA_API, DROPDOWN_SELECTOR_FORM_CHILD, e => e.stopPropagation());\n/**\n* ------------------------------------------------------------------------\n* Exports\n* ------------------------------------------------------------------------\n*/\n\nexport default Dropdown;\n/**\n * --------------------------------------------------------------------------\n * ChiChi (v0.1.0-alpha2): modal.ts\n * Licensed under MIT\n * --------------------------------------------------------------------------\n */\n/**\n * --------------------------------------------------------------------------\n * ChiChi (v0.1.0-alpha2): popover.ts\n * Licensed under MIT\n * --------------------------------------------------------------------------\n */\n/**\n * --------------------------------------------------------------------------\n * ChiChi (v0.1.0-alpha2): slider.ts\n * Licensed under MIT\n * --------------------------------------------------------------------------\n */\nimport { TRANSITION_END, emulateTransitionEnd, getElementFromSelector, getTransitionDurationFromElement, isVisible, reflow, triggerTransitionEnd } from './util/index';\nimport Data from './dom/data';\nimport EventHandler from './dom/event-handler';\nimport Manipulator from './dom/manipulator';\nimport SelectorEngine from './dom/selector-engine';\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst SLIDER_NAME = 'slider';\nconst SLIDER_VERSION = '0.1.0-alpha1';\nconst SLIDER_DATA_KEY = 'chichi.slider';\nconst SLIDER_EVENT_KEY = `.${SLIDER_DATA_KEY}`;\nconst SLIDER_DATA_API_KEY = '.data-api';\nconst SLIDER_ARROW_LEFT_KEY = 'ArrowLeft';\nconst SLIDER_ARROW_RIGHT_KEY = 'ArrowRight';\nconst SLIDER_TOUCHEVENT_COMPAT_WAIT = 500; // Time for mouse compat events to fire after touch\n\nconst SLIDER_SWIPE_THRESHOLD = 40;\nconst SliderDefaults = {\n  interval: 5000,\n  keyboard: true,\n  slide: false,\n  pause: 'hover',\n  wrap: true,\n  touch: true\n};\nconst SLIDER_DIRECTION_NEXT = 'next';\nconst SLIDER_DIRECTION_PREV = 'prev';\nconst SLIDER_DIRECTION_LEFT = 'left';\nconst SLIDER_DIRECTION_RIGHT = 'right';\nconst SLIDER_EVENT_SLIDE = `slide${SLIDER_EVENT_KEY}`;\nconst SLIDER_EVENT_SLID = `slid${SLIDER_EVENT_KEY}`;\nconst SLIDER_EVENT_KEYDOWN = `keydown${SLIDER_EVENT_KEY}`;\nconst SLIDER_EVENT_MOUSEENTER = `mouseenter${SLIDER_EVENT_KEY}`;\nconst SLIDER_EVENT_MOUSELEAVE = `mouseleave${SLIDER_EVENT_KEY}`;\nconst SLIDER_EVENT_TOUCHSTART = `touchstart${SLIDER_EVENT_KEY}`;\nconst SLIDER_EVENT_TOUCHMOVE = `touchmove${SLIDER_EVENT_KEY}`;\nconst SLIDER_EVENT_TOUCHEND = `touchend${SLIDER_EVENT_KEY}`;\nconst SLIDER_EVENT_POINTERDOWN = `pointerdown${SLIDER_EVENT_KEY}`;\nconst SLIDER_EVENT_POINTERUP = `pointerup${SLIDER_EVENT_KEY}`;\nconst SLIDER_EVENT_DRAG_START = `dragstart${SLIDER_EVENT_KEY}`;\nconst SLIDER_EVENT_LOAD_DATA_API = `load${SLIDER_EVENT_KEY}${SLIDER_DATA_API_KEY}`;\nconst SLIDER_EVENT_CLICK_DATA_API = `click${SLIDER_EVENT_KEY}${SLIDER_DATA_API_KEY}`;\nconst SLIDER_CLASS_NAME_SLIDER = 'slider';\nconst SLIDER_CLASS_NAME_ACTIVE = 'is-active';\nconst SLIDER_CLASS_NAME_SLIDE = 'slide';\nconst SLIDER_CLASS_NAME_RIGHT = 'carousel-item-right';\nconst SLIDER_CLASS_NAME_LEFT = 'carousel-item-left';\nconst SLIDER_CLASS_NAME_NEXT = 'carousel-item-next';\nconst SLIDER_CLASS_NAME_PREV = 'carousel-item-prev';\nconst SLIDER_CLASS_NAME_POINTER_EVENT = 'pointer-event';\nconst SLIDER_SELECTOR_ACTIVE = '.is-active';\nconst SLIDER_SELECTOR_ACTIVE_ITEM = '.is-active.slider-item';\nconst SLIDER_SELECTOR_ITEM = '.slider-item';\nconst SLIDER_SELECTOR_ITEM_IMG = '.slider-item img';\nconst SLIDER_SELECTOR_NEXT_PREV = '.slider-item-next, .slider-item-prev';\nconst SLIDER_SELECTOR_INDICATORS = '.slider-indicators';\nconst SLIDER_SELECTOR_DATA_SLIDE = '[data-slide], [data-slide-to]';\nconst SLIDER_SELECTOR_DATA_RIDE = '[data-ride=\"slider\"]';\nconst PointerType = {\n  TOUCH: 'touch',\n  PEN: 'pen'\n};\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\n\nclass Slider {\n  constructor(element, config) {\n    this._items = null;\n    this._interval = null;\n    this._activeElement = null;\n    this._isPaused = false;\n    this._isSliding = false;\n    this.touchTimeout = null;\n    this.touchStartX = 0;\n    this.touchDeltaX = 0;\n    this._config = this._getConfig(config);\n    this._element = element;\n    this._indicatorsElement = SelectorEngine.findOne(SLIDER_SELECTOR_INDICATORS, this._element);\n    this._touchSupported = 'ontouchstart' in document.documentElement || navigator.maxTouchPoints > 0;\n    this._pointerEvent = Boolean(window.PointerEvent);\n\n    this._addEventListeners();\n\n    Data.setData(element, SLIDER_DATA_KEY, this);\n  } // Getters\n\n\n  static get VERSION() {\n    return SLIDER_VERSION;\n  }\n\n  static get Default() {\n    return SliderDefaults;\n  } // Public\n\n\n  next() {\n    if (!this._isSliding) {\n      this._slide(SLIDER_DIRECTION_NEXT);\n    }\n  }\n\n  nextWhenVisible() {\n    // Don't call next when the page isn't visible\n    // or the carousel or its parent isn't visible\n    if (!document.hidden && isVisible(this._element)) {\n      this.next();\n    }\n  }\n\n  prev() {\n    if (!this._isSliding) {\n      this._slide(SLIDER_DIRECTION_PREV);\n    }\n  }\n\n  pause(event) {\n    if (!event) {\n      this._isPaused = true;\n    }\n\n    if (SelectorEngine.findOne(SLIDER_SELECTOR_NEXT_PREV, this._element)) {\n      triggerTransitionEnd(this._element);\n      this.cycle(true);\n    }\n\n    clearInterval(this._interval);\n    this._interval = null;\n  }\n\n  cycle(event) {\n    if (!event) {\n      this._isPaused = false;\n    }\n\n    if (this._interval) {\n      clearInterval(this._interval);\n      this._interval = null;\n    }\n\n    if (this._config && this._config.interval && !this._isPaused) {\n      this._interval = setInterval((document.visibilityState ? this.nextWhenVisible : this.next).bind(this), this._config.interval);\n    }\n  }\n\n  to(index) {\n    this._activeElement = SelectorEngine.findOne(SLIDER_SELECTOR_ACTIVE_ITEM, this._element);\n\n    const activeIndex = this._getItemIndex(this._activeElement);\n\n    if (index > this._items.length - 1 || index < 0) {\n      return;\n    }\n\n    if (this._isSliding) {\n      EventHandler.one(this._element, SLIDER_EVENT_SLID, () => this.to(index));\n      return;\n    }\n\n    if (activeIndex === index) {\n      this.pause();\n      this.cycle();\n      return;\n    }\n\n    const direction = index > activeIndex ? SLIDER_DIRECTION_NEXT : SLIDER_DIRECTION_PREV;\n\n    this._slide(direction, this._items[index]);\n  }\n\n  dispose() {\n    EventHandler.off(this._element, SLIDER_EVENT_KEY);\n    Data.removeData(this._element, SLIDER_DATA_KEY);\n    this._items = null;\n    this._config = null;\n    this._element = null;\n    this._interval = null;\n    this._isPaused = null;\n    this._isSliding = null;\n    this._activeElement = null;\n    this._indicatorsElement = null;\n  } // Private\n\n\n  _getConfig(config) {\n    config = { ...Default,\n      ...config\n    };\n    typeCheckConfig(NAME, config, DefaultType);\n    return config;\n  }\n\n  _handleSwipe() {\n    const absDeltax = Math.abs(this.touchDeltaX);\n\n    if (absDeltax <= SWIPE_THRESHOLD) {\n      return;\n    }\n\n    const direction = absDeltax / this.touchDeltaX;\n    this.touchDeltaX = 0; // swipe left\n\n    if (direction > 0) {\n      this.prev();\n    } // swipe right\n\n\n    if (direction < 0) {\n      this.next();\n    }\n  }\n\n  _addEventListeners() {\n    if (this._config.keyboard) {\n      EventHandler.on(this._element, SLIDER_EVENT_KEYDOWN, event => this._keydown(event));\n    }\n\n    if (this._config.pause === 'hover') {\n      EventHandler.on(this._element, SLIDER_EVENT_MOUSEENTER, event => this.pause(event));\n      EventHandler.on(this._element, SLIDER_EVENT_MOUSELEAVE, event => this.cycle(event));\n    }\n\n    if (this._config.touch && this._touchSupported) {\n      this._addTouchEventListeners();\n    }\n  }\n\n  _addTouchEventListeners() {\n    const start = event => {\n      if (this._pointerEvent && PointerType[event.pointerType.toUpperCase()]) {\n        this.touchStartX = event.clientX;\n      } else if (!this._pointerEvent) {\n        this.touchStartX = event.touches[0].clientX;\n      }\n    };\n\n    const move = event => {\n      // ensure swiping with one touch and not pinching\n      if (event.touches && event.touches.length > 1) {\n        this.touchDeltaX = 0;\n      } else {\n        this.touchDeltaX = event.touches[0].clientX - this.touchStartX;\n      }\n    };\n\n    const end = event => {\n      if (this._pointerEvent && PointerType[event.pointerType.toUpperCase()]) {\n        this.touchDeltaX = event.clientX - this.touchStartX;\n      }\n\n      this._handleSwipe();\n\n      if (this._config.pause === 'hover') {\n        // If it's a touch-enabled device, mouseenter/leave are fired as\n        // part of the mouse compatibility events on first tap - the carousel\n        // would stop cycling until user tapped out of it;\n        // here, we listen for touchend, explicitly pause the carousel\n        // (as if it's the second time we tap on it, mouseenter compat event\n        // is NOT fired) and after a timeout (to allow for mouse compatibility\n        // events to fire) we explicitly restart cycling\n        this.pause();\n\n        if (this.touchTimeout) {\n          clearTimeout(this.touchTimeout);\n        }\n\n        this.touchTimeout = setTimeout(event => this.cycle(event), TOUCHEVENT_COMPAT_WAIT + this._config.interval);\n      }\n    };\n\n    SelectorEngine.find(SLIDER_SELECTOR_ITEM_IMG, this._element).forEach(itemImg => {\n      EventHandler.on(itemImg, SLIDER_EVENT_DRAG_START, e => e.preventDefault());\n    });\n\n    if (this._pointerEvent) {\n      EventHandler.on(this._element, SLIDER_EVENT_POINTERDOWN, event => start(event));\n      EventHandler.on(this._element, SLIDER_EVENT_POINTERUP, event => end(event));\n\n      this._element.classList.add(SLIDER_CLASS_NAME_POINTER_EVENT);\n    } else {\n      EventHandler.on(this._element, SLIDER_EVENT_TOUCHSTART, event => start(event));\n      EventHandler.on(this._element, SLIDER_EVENT_TOUCHMOVE, event => move(event));\n      EventHandler.on(this._element, SLIDER_EVENT_TOUCHEND, event => end(event));\n    }\n  }\n\n  _keydown(event) {\n    if (/input|textarea/i.test(event.target.tagName)) {\n      return;\n    }\n\n    switch (event.key) {\n      case ARROW_LEFT_KEY:\n        event.preventDefault();\n        this.prev();\n        break;\n\n      case ARROW_RIGHT_KEY:\n        event.preventDefault();\n        this.next();\n        break;\n\n      default:\n    }\n  }\n\n  _getItemIndex(element) {\n    this._items = element && element.parentNode ? SelectorEngine.find(SLIDER_SELECTOR_ITEM, element.parentNode) : [];\n    return this._items.indexOf(element);\n  }\n\n  _getItemByDirection(direction, activeElement) {\n    const isNextDirection = direction === SLIDER_DIRECTION_NEXT;\n    const isPrevDirection = direction === SLIDER_DIRECTION_PREV;\n\n    const activeIndex = this._getItemIndex(activeElement);\n\n    const lastItemIndex = this._items.length - 1;\n    const isGoingToWrap = isPrevDirection && activeIndex === 0 || isNextDirection && activeIndex === lastItemIndex;\n\n    if (isGoingToWrap && !this._config.wrap) {\n      return activeElement;\n    }\n\n    const delta = direction === SLIDER_DIRECTION_PREV ? -1 : 1;\n    const itemIndex = (activeIndex + delta) % this._items.length;\n    return itemIndex === -1 ? this._items[this._items.length - 1] : this._items[itemIndex];\n  }\n\n  _triggerSlideEvent(relatedTarget, eventDirectionName) {\n    const targetIndex = this._getItemIndex(relatedTarget);\n\n    const fromIndex = this._getItemIndex(SelectorEngine.findOne(SLIDER_SELECTOR_ACTIVE_ITEM, this._element));\n\n    return EventHandler.trigger(this._element, SLIDER_SLIDER_EVENT_SLIDE, {\n      relatedTarget,\n      direction: eventDirectionName,\n      from: fromIndex,\n      to: targetIndex\n    });\n  }\n\n  _setActiveIndicatorElement(element) {\n    if (this._indicatorsElement) {\n      const indicators = SelectorEngine.find(SLIDER_SELECTOR_ACTIVE, this._indicatorsElement);\n\n      for (let i = 0; i < indicators.length; i++) {\n        indicators[i].classList.remove(SLIDER_CLASS_NAME_ACTIVE);\n      }\n\n      const nextIndicator = this._indicatorsElement.children[this._getItemIndex(element)];\n\n      if (nextIndicator) {\n        nextIndicator.classList.add(SLIDER_CLASS_NAME_ACTIVE);\n      }\n    }\n  }\n\n  _slide(direction, element) {\n    const activeElement = SelectorEngine.findOne(SLIDER_SELECTOR_ACTIVE_ITEM, this._element);\n\n    const activeElementIndex = this._getItemIndex(activeElement);\n\n    const nextElement = element || activeElement && this._getItemByDirection(direction, activeElement);\n\n    const nextElementIndex = this._getItemIndex(nextElement);\n\n    const isCycling = Boolean(this._interval);\n    let directionalClassName;\n    let orderClassName;\n    let eventDirectionName;\n\n    if (direction === SLIDER_DIRECTION_NEXT) {\n      directionalClassName = SLIDER_CLASS_NAME_LEFT;\n      orderClassName = SLIDER_CLASS_NAME_NEXT;\n      eventDirectionName = SLIDER_DIRECTION_LEFT;\n    } else {\n      directionalClassName = SLIDER_CLASS_NAME_RIGHT;\n      orderClassName = SLIDER_CLASS_NAME_PREV;\n      eventDirectionName = SLIDER_DIRECTION_RIGHT;\n    }\n\n    if (nextElement && nextElement.classList.contains(SLIDER_CLASS_NAME_ACTIVE)) {\n      this._isSliding = false;\n      return;\n    }\n\n    const slideEvent = this._triggerSlideEvent(nextElement, eventDirectionName);\n\n    if (slideEvent.defaultPrevented) {\n      return;\n    }\n\n    if (!activeElement || !nextElement) {\n      // Some weirdness is happening, so we bail\n      return;\n    }\n\n    this._isSliding = true;\n\n    if (isCycling) {\n      this.pause();\n    }\n\n    this._setActiveIndicatorElement(nextElement);\n\n    if (this._element.classList.contains(SLIDER_CLASS_NAME_SLIDE)) {\n      nextElement.classList.add(orderClassName);\n      reflow(nextElement);\n      activeElement.classList.add(directionalClassName);\n      nextElement.classList.add(directionalClassName);\n      const nextElementInterval = parseInt(nextElement.getAttribute('data-interval'), 10);\n\n      if (nextElementInterval) {\n        this._config.defaultInterval = this._config.defaultInterval || this._config.interval;\n        this._config.interval = nextElementInterval;\n      } else {\n        this._config.interval = this._config.defaultInterval || this._config.interval;\n      }\n\n      const transitionDuration = getTransitionDurationFromElement(activeElement);\n      EventHandler.one(activeElement, TRANSITION_END, () => {\n        nextElement.classList.remove(directionalClassName, orderClassName);\n        nextElement.classList.add(SLIDER_CLASS_NAME_ACTIVE);\n        activeElement.classList.remove(SLIDER_CLASS_NAME_ACTIVE, orderClassName, directionalClassName);\n        this._isSliding = false;\n        setTimeout(() => {\n          EventHandler.trigger(this._element, SLIDER_EVENT_SLID, {\n            relatedTarget: nextElement,\n            direction: eventDirectionName,\n            from: activeElementIndex,\n            to: nextElementIndex\n          });\n        }, 0);\n      });\n      emulateTransitionEnd(activeElement, transitionDuration);\n    } else {\n      activeElement.classList.remove(SLIDER_CLASS_NAME_ACTIVE);\n      nextElement.classList.add(SLIDER_CLASS_NAME_ACTIVE);\n      this._isSliding = false;\n      EventHandler.trigger(this._element, SLIDER_EVENT_SLID, {\n        relatedTarget: nextElement,\n        direction: eventDirectionName,\n        from: activeElementIndex,\n        to: nextElementIndex\n      });\n    }\n\n    if (isCycling) {\n      this.cycle();\n    }\n  } // Static\n\n\n  static sliderInterface(element, config) {\n    let data = Data.getData(element, SLIDER_DATA_KEY);\n    let _config = { ...Default,\n      ...Manipulator.getDataAttributes(element)\n    };\n\n    if (typeof config === 'object') {\n      _config = { ..._config,\n        ...config\n      };\n    }\n\n    const action = typeof config === 'string' ? config : _config.slide;\n\n    if (!data) {\n      data = new Slider(element, _config);\n    }\n\n    if (typeof config === 'number') {\n      data.to(config);\n    } else if (typeof action === 'string') {\n      if (typeof data[action] === 'undefined') {\n        throw new TypeError(`No method named \"${action}\"`);\n      }\n\n      data[action]();\n    } else if (_config.interval && _config.ride) {\n      data.pause();\n      data.cycle();\n    }\n  }\n\n  static dataApiClickHandler(event) {\n    const target = getElementFromSelector(this);\n\n    if (!target || !target.classList.contains(SLIDER_CLASS_NAME_SLIDER)) {\n      return;\n    }\n\n    const config = { ...Manipulator.getDataAttributes(target),\n      ...Manipulator.getDataAttributes(this)\n    };\n    const slideIndex = this.getAttribute('data-slide-to');\n\n    if (slideIndex) {\n      config.interval = false;\n    }\n\n    Slider.sliderInterface(target, config);\n\n    if (slideIndex) {\n      Data.getData(target, SLIDER_DATA_KEY).to(slideIndex);\n    }\n\n    event.preventDefault();\n  }\n\n  static getInstance(element) {\n    return Data.getData(element, SLIDER_DATA_KEY);\n  }\n\n}\n/**\n * ------------------------------------------------------------------------\n * Data Api implementation\n * ------------------------------------------------------------------------\n */\n\n\nEventHandler.on(document, SLIDER_EVENT_CLICK_DATA_API, SLIDER_SELECTOR_DATA_SLIDE, Slider.dataApiClickHandler);\nEventHandler.on(window, SLIDER_EVENT_LOAD_DATA_API, () => {\n  const sliders = SelectorEngine.find(SLIDER_SELECTOR_DATA_RIDE);\n\n  for (let i = 0, len = sliders.length; i < len; i++) {\n    Slider.sliderInterface(sliders[i], Data.getData(sliders[i], SLIDER_DATA_KEY));\n  }\n});\n/**\n * ------------------------------------------------------------------------\n * Exports\n * ------------------------------------------------------------------------\n */\n\nexport default Slider;\n/**\n * --------------------------------------------------------------------------\n * ChiChi (v0.1.0-alpha2): tab.ts\n * Licensed under MIT\n * --------------------------------------------------------------------------\n */\n/**\n * --------------------------------------------------------------------------\n * ChiChi (v0.1.0-alpha2): toast.ts\n * Licensed under MIT\n * --------------------------------------------------------------------------\n */\n/**\n * --------------------------------------------------------------------------\n * ChiChi (v0.1.0-alpha2): tooltip.ts\n * Licensed under MIT\n * --------------------------------------------------------------------------\n */\n//# sourceMappingURL=chichi.js.map\n"]}