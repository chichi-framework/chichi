//
// --------------------------------------------------------------------------
// ChiChi (v0.1.0-alpha2): utilitiess/mixins.styl
// Licensed under MIT (https://github.com/chichi/chichi/blob/master/LICENSE)
// --------------------------------------------------------------------------
//

typography_sizes($target = '')
  for $size in $sizes
    $i = index($sizes, $size) + 1
    $target_suffix = $target == '' ? '': '-' + $target
    .is-size-{$i}{$target_suffix}
      font-size: $size !important

has_color_helpers($colors=$colors)
  for $name, $pair in $colors
    $color = nth($pair, 1)
    .has-text-{$name}
      color: $color
    a.has-text-{$name}
      &:hover,
      &:focus
        color: chichi_darken($color, 10%)
    .has-background-{$name}
      background-color: $color

has_color_shade_helpers($colors=$shades)
  for $name, $pair in $colors
    $color = nth($pair, 1)
    .has-text-{$name}
      color: $color
    .has-background-{$name}
      background-color: $color

has_color_light_helpers($colors=$colors)
  for $name, $pair in $colors
    if (length($pair) >= 3)
      $color = nth($pair, 3)
      .has-text-{$name}-light
        color: $color
      a.has-text-{$name}-light
        &:hover,
        &:focus
          color: chichi_darken($color, 10%)
      .has-background-{$name}-light
        background-color: $color

has_color_dark_helpers($colors=$colors)
  for $name, $pair in $colors
    if (length($pair) >= 4)
      $color = nth($pair, 4)
      .has-text-{$name}-dark
        color: $color
      a.has-text-{$name}-dark
        &:hover,
        &:focus
          color: chichi_lighten($color, 10%)
      .has-background-{$name}-dark
        background-color: $color

alignments($target = '')
  for $alignment, $text_align in $alignments
    $target_suffix = $target == '' ? '': '-' + $target
    .has-text-{$alignment}{$target_suffix}
      text-align: $text_align

clearfix()
  &::after
    clear: both
    content: ' '
    display: table

center($width, $height = 0)
  position: absolute
  if $height != 0
    left: 'calc(50% - (%s / 2))' % $width
    top: 'calc(50% - (%s / 2))' % $height
  else
    left: 'calc(50% - (%s / 2))' % $width
    top: 'calc(50% - (%s / 2))' % $width

fa($size, $dimensions)
  display: inline-block
  font-size: $size
  height: $dimensions
  line-height: @height
  text-align: center
  vertical-align: top
  width: @height

hamburger($dimensions)
  cursor: pointer
  display: block
  height: $dimensions
  position: relative
  width: @height
  span
    background-color: currentColor
    display: block
    height: 1px
    left: calc(50% - 8px)
    position: absolute
    transform-origin: center
    transition-duration: $hamburger_speed
    transition-property: background-color, opacity, transform
    transition-timing-function: $hamburger_easing
    width: 16px
    &:nth-child(1)
      top: calc(50% - 6px)
    &:nth-child(2)
      top: calc(50% - 1px)
    &:nth-child(3)
      top: calc(50% - 4px)
  &:hover
    background-color: rgba($black, 0.05)
  &.is-active
    span
      &:nth-child(1)
        transform: translateY(5px) rotate(45deg)
      &:nth-child(2)
        opacity: 0
      &:nth-child(3)
        transform: translateY(-5px) rotate(-45deg)

overflow_touch()
  -webkit-overflow-scrolling: touch

ltr()
  if not $enable_rtl
    {block}

rtl()
  if $enable_rtl
    {block}

ltr_property($property, $spacing, $right = true)
  $normal = $right ? 'right' : 'left'
  $opposite = $right ? 'left' : 'right'
  if $enable_rtl
    add-property('%s-%s' % ($property $opposite), $spacing)
  else
    add-property('%s-%s' % ($property $normal), $spacing)

ltr_position($spacing, $right = true)
  $normal = $right ? 'right' : 'left'
  $opposite = $right ? 'left' : 'right'
  if $enable_rtl
    add-property('%s' % $opposite, $spacing)
  else
    add-property('%s' % $normal, $spacing)

keyframes($name)
  @keyframes $name
    {block}

placeholder()
  $placeholders = ':-moz' ':-webkit-input' '-moz' '-ms-input'
  for $placeholder in $placeholders
    &:{$placeholder}-placeholder
      {block}

from($device)
  @media screen and (min-width $device)
    {block}

until($device)
  @media screen and (max-width $device - 1px)
    {block}

mobile()
  if $enable_mobile
    @media screen and (max-width $tablet - 1px)
      {block}

tablet()
  if $enable_tablet
    @media screen and (min-width $tablet), print
      {block}

tablet_only()
  if $enable_tablet
    @media screen and (min-width $tablet) and (max-width $desktop - 1px)
      {block}

touch()
  if $enable_touch
    @media screen and (max-width $desktop - 1px)
      {block}

desktop()
  if $enable_desktop
    @media screen and (min-width $desktop)
      {block}

desktop_only()
  if $enable_widescreen
    @media screen and (min-width $desktop) and (max-width $widescreen - 1px)
      {block}

until_widescreen()
  if $enable_widescreen
    @media screen and (max-width $widescreen - 1px)
      {block}

widescreen()
  if $enable_widescreen
    @media screen and (min-width $widescreen)
      {block}

widescreen_only()
  if $enable_widescreen and $enable_fullhd
    @media screen and (min-width $widescreen) and (max-width $fullhd - 1px)
      {block}

until_fullhd()
  if $enable_fullhd
    @media screen and (max-width $fullhd - 1px)
      {block}

fullhd()
  if $enable_fullhd
    @media screen and (min-width $fullhd)
      {block}

ltr()
  if not $enable_rtl
    {block}

rtl()
  if $enable_rtl
    {block}

unselectable()
  -webkit-touch-callout: none
  -webkit-user-select: none
  -moz-user-select: none
  -ms-user-select: none
  user-select: none

arrow($color = transparent)
  border: 3px solid $color
  border-radius: 2px
  border-right: 0
  border-top: 0
  content: ' '
  display: block
  height: 0.625em
  margin-top: -0.4375em
  pointer-events: none
  position: absolute
  top: 50%
  transform: rotate(-45deg)
  transform-origin: center
  width: @height

block($spacing = $block_spacing)
  &:not(:last-child)
    margin-bottom: $spacing

control()
  -moz-appearance: none
  -webkit-appearance: none
  align-items: center
  border: $control_border_width solid transparent
  border-radius: $control_radius
  box-shadow: none
  display: inline-flex
  font-size: $size_normal
  height: $control_height
  justify-content: flex-start
  line-height: $control_line_height
  padding-bottom: $control_padding_vertical
  padding-left: $control_padding_horizontal
  padding-right: $control_padding_horizontal
  padding-top: $control_padding_vertical
  position: relative
  vertical-align: top
  // States
  &:focus,
  &.is-focused,
  &:active,
  &.is-active
    outline: 0
  &[disabled],
  fieldset[disabled] &
    cursor: not-allowed

control-small()
  border-radius: $control_radius_small
  font-size: $size_small

control-medium()
  font-size: $size_medium

control-large()
  font-size: $size_larg

delete()
  @extends $unselectable
  -moz-appearance: none
  -webkit-appearance: none
  background-color: chichi_rgba($scheme_invert, 0.2)
  border: 0
  border-radius: $radius_rounded
  cursor: pointer
  display: block
  flex-grow: 0
  flex-shrink: 0
  flex-basis: 0
  height: 20px
  max-height: @height
  max-width: @height
  min-height: @height
  max-width: @height
  outline: 0
  position: relative
  vertical-align: top
  width: @height
  &::after,
  &::before
    background-color: $scheme_main
    content: ''
    display: block
    left: 50%
    position: absolute
    top: 50%
    transform: translateX(-50%) translateY(-50%) rotate(45deg)
    transform-origin: center center
  &::before
    height: 2px
    width: 50%
  &::after
    height: 50%
    width: 2px
  &:hover,
  &:focus
    background-color chichi_rgba($scheme_invert, 0.3)
  &:active
    background-color: chichi_rgba($scheme_invert, 0.4)
  // Sizes
  &.is-small
    height: 16px
    max-height: @height
    max-width: @height
    min-height: @height
    max-width: @height
    width: @height
  &.is-medium
    height: 24px
    max-height: @height
    max-width: @height
    min-height: @height
    max-width: @height
    width: @height
  &.is-large
    height: 32px
    max-height: @height
    max-width: @height
    min-height: @height
    max-width: @height
    width: @height

loader()
  animation: spinAround 500ms infinite linear
  border: 2px solid $grey_lighter
  border-radius: $radius_rounded
  border-right-color: transparent
  border-top-color: transparent
  content: ''
  display: block
  height: 1em
  position: relative
  width: 1em

overlay($offset = 0)
  bottom: $offset
  left: $offset
  position: absolute
  right: $offset
  top: $offset
